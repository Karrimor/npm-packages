#!/usr/bin/env bash
# echo >> ${KUBECTL_OUTPUT_FOLDER}/kubectl.txt
# echo $@ >> ${KUBECTL_OUTPUT_FOLDER}/kubectl.txt
export KUBEOP=${1}

if [ -z "${KUBECTL_OUTPUT_FOLDER}" ]; then
	KUBECTL_OUTPUT_FOLDER="./.testrun"
fi


if [ "${1}" = "delete" ]; then
	if [ "${2}" = "-f" ] && [ "${3}" = "-" ];
	then
		input=$(cat)
		if [ "${input}" = "" ]; then
			echo ERROR IN kubectl delete -f -  empty input!!!!
			exit 255
		fi
#		echo -n "-------------- delete stdin ----------------------->>>>" >> ${KUBECTL_OUTPUT_FOLDER}/kubectl.txt
#		echo -n "${input}" >> ${KUBECTL_OUTPUT_FOLDER}/kubectl.txt
#		echo "<<<<-------------- delete stdin -----------------------" >> ${KUBECTL_OUTPUT_FOLDER}/kubectl.txt
		filename=$(echo "${input}" | deploymentdocument-classifier.js)
		if [ -e "${KUBECTL_OUTPUT_FOLDER}/${1}-${filename}.yaml" ]; then
			echo "ERROR: ${KUBECTL_OUTPUT_FOLDER}/${1}-${filename}.yaml already deployed. Probably means that deployment descriptor exists both in folders and is being extracted from image metadata"
			exit 255
		fi

    if [ ! -d "${KUBECTL_OUTPUT_FOLDER}" ]; then
      mkdir -p "${KUBECTL_OUTPUT_FOLDER}"
    fi
		echo -n "${input}" >> ${KUBECTL_OUTPUT_FOLDER}/${1}-${filename}.yaml
		echo "fake kubectl ${1} ${filename}.yaml DONE"

		exit 0
	fi
fi
if [ "${1}" = "create" ]; then
	echo "kubectl create requires no other input"
	exit 0
fi
if [ -d "${3}" ]; then
	find ${3} -name "*.yml" -or -name "*.yaml"  | xargs -n 1 -I {} bash -c 'kubectl ${KUBEOP} -f "$@"' _ {}
elif [ -e "${3}" ]; then
#	echo -n "-------------   ${3} contents -------------->>>>"  >> ${KUBECTL_OUTPUT_FOLDER}/kubectl.txt
#	cat ${3} >> ${KUBECTL_OUTPUT_FOLDER}/kubectl.txt
#    echo "<<<<-------------   ${3} contents --------------"  >> ${KUBECTL_OUTPUT_FOLDER}/kubectl.txt

	filename=$(cat ${3} | deploymentdocument-classifier.js)

	if [ -e "${KUBECTL_OUTPUT_FOLDER}/${1}-${filename}.yaml" ]; then
		echo "ERROR: ${KUBECTL_OUTPUT_FOLDER}/${1}-${filename}.yaml already exists. Probably means that deployment descriptor exists both in aws-environment and is being extracted from image metadata"
		exit 255
	fi

	cat ${3} >> ${KUBECTL_OUTPUT_FOLDER}/${1}-${filename}.yaml
	echo "fake kubectl ${1} ${filename}.yaml DONE"

else
#		echo "apply -f - specified, reading stdin"
	input=$(cat)

	filename=$(echo "${input}" | deploymentdocument-classifier.js)

	if [ -e "${KUBECTL_OUTPUT_FOLDER}/${1}-${filename}.yaml" ]; then
		echo "ERROR: ${KUBECTL_OUTPUT_FOLDER}/${1}-${filename}.yaml already exists. Probably means that deployment descriptor exists both in aws-environment and is being extracted from image metadata"
		exit 255
	fi

	echo -n "${input}" >> ${KUBECTL_OUTPUT_FOLDER}/${1}-${filename}.yaml

	if [ "${input}" = "" ]; then
		echo ERROR IN KUBECTL.... empty input!!!!
		exit 255
	fi
	echo "fake kubectl ${1} ${filename}.yaml DONE"


#   Fake deployment failure...uncomment lines below.
#	if [ $(echo ${input} | grep deployment | wc -l) = "1" ]; then
#		exit -1
#	fi

#	echo -n "-------------- stdin ----------------------->>>>" >> ${KUBECTL_OUTPUT_FOLDER}/kubectl.txt
#	echo -n "${input}" >> ${KUBECTL_OUTPUT_FOLDER}/kubectl.txt
#    echo "<<<<-------------- stdin -----------------------" >> ${KUBECTL_OUTPUT_FOLDER}/kubectl.txt
fi
