apiVersion: v1
data:
  password: dmVyeXNlY3JldAo
kind: Secret
metadata:
  annotations: null
  name: xbakvinn-new-branch
  namespace: default
  resourceVersion: '109999'
  labels:
    ttl-hours: '66'
type: Opaque
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: toyota-cronjob-new-branch
  labels:
    ttl-hours: '66'
spec:
  schedule: 30 17 * * 1-5
  concurrencyPolicy: Replace
  jobTemplate:
    metadata:
      labels:
        app: toyota-cron-new-branch
        origin: new-branch
        environment: dev
    spec:
      template:
        spec:
          containers:
            - name: toyota-cron-new-branch
              image: DOCKER_IMAGE
              imagePullPolicy: IfNotPresent
              command:
                - node
                - .dist/job/run
              env:
                - name: XBAKVINN_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: xbakvinn-new-branch
                      key: password
                - name: SERVER_EVENTS_CLUSTER_API
                  value: 'http://server-events-service'
          restartPolicy: OnFailure
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: toyota-deployment-new-branch
  labels:
    ttl-hours: '66'
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: toyota-pod-new-branch
        environment: dev
        origin: new-branch
    spec:
      containers:
        - name: toyota-pod-new-branch
          image: DOCKER_IMAGE
          imagePullPolicy: IfNotPresent
          env:
            - name: DRAGON_ENV
              value: test
            - name: SERVICE_SUFFIX
              value: dev.domain.com
            - name: IN_CLUSTER
              value: 'YES'
            - name: FEATURES_ON
              value: 'true'
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 60
            timeoutSeconds: 4
            failureThreshold: 3
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 15
            timeoutSeconds: 4
          ports:
            - containerPort: 80
              name: httpport
---
apiVersion: v1
kind: Service
metadata:
  name: toyota-new-branch
  labels:
    name: toyota-new-branch
    environment: dev
    ttl-hours: '66'
spec:
  ports:
    - port: 80
      name: serviceport
      targetPort: 80
      protocol: TCP
  selector:
    app: toyota-pod-new-branch
    origin: new-branch
    environment: dev
  sessionAffinity: ClientIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: toyota-ingress-new-branch
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
  labels:
    ttl-hours: '66'
spec:
  rules:
    - host: new-branch-toyota.dev.domain.com
      http:
        paths:
          - backend:
              serviceName: toyota-new-branch
              servicePort: 80
